
#include "ShadesController.h"

#define _ 0

u8 Frames[][ShadesController::Height][ShadesController::Width] = 
{
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,1,_,1,_,1,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,_,1,_,1,_,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,1,_,1,_,1,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,_,1,_,1,_,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,_,_,_,_,1,1,_,_,_,1,1,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,_,1,_,_,1,_,_,1,_,1,_,_,1,_,_,1,_,_,1,_,_},
		{_,_,1,1,1,_,_,_,1,_,_,1,_,1,_,_,1,_,_,1,1,1,_,_,_},
		{_,_,1,_,_,1,_,_,_,1,1,_,_,_,1,1,_,_,_,1,_,_,_,_,_},
		{_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,_,_,_,_,1,1,_,_,_,1,1,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,_,1,_,_,1,_,_,1,_,1,_,_,1,_,_,1,_,_,1,_,_},
		{_,_,1,1,1,_,_,_,1,_,_,1,_,1,_,_,1,_,_,1,1,1,_,_,_},
		{_,_,1,_,_,1,_,_,_,1,1,_,_,_,1,1,_,_,_,1,_,_,_,_,_},
		{_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
};

#undef _

ShadesController::ShadesController()
{
	for (int i = 0; i < Width*Height; i++)
	{
		((RGB *)Lights)[i] = HSL((double)i/(Width*Height))();
	}
}

void ShadesController::CopyFrame(u8 src[Height][Width])
{
	for (int i = 0; i < Width*Height; i++)
	{
		((RGB *)Lights)[i] = ( ((u8 *)src)[i] ? RGB{255,255,255} : ((RGB *)Lights)[i] );
	}
}

void ShadesController::CopyFrame(RGB src[Height][Width])
{
	for (int i = 0; i < Width*Height; i++)
	{
		((RGB *)Lights)[i] = ((RGB *)src)[i];
	}
}

void ShadesController::Update(i64 now)
{
	for (int y = 0; y < Height; y++)
	{
		for (int x = 0; x < Width; x++)
		{
			if ((now%10000) < 5000)
			{
				Lights[y][x] = HSL(mmod((now%2000)/2000.0 + (-y-x)/50.0,1.0),1.0,0.3)();
			}
			else 
			{
				Lights[y][x] = HSL(MAGENTA+y/60.0-0.11+sin((now%5000)/5000.0*Width-x/2.0)/70.0+cos((now%9000)/9000.0*Width-x/5.0)/70.0,1.0,0.3)();
			}
		}
	}
	CopyFrame(Frames[0+1*now/200 % 27]);
}

#ifdef GRAPHICAL
void ShadesController::Draw(int xOff, int yOff)
{
	DrawLine(xOff+30-1, yOff-1, xOff+(Width-1)*30-10, yOff-1, {255,255,255});
	DrawLine(xOff+30-1, yOff+Height*30-10, xOff+(Width/2-3)*30-10, yOff+Height*30-10, {255,255,255});
	DrawLine(xOff+(Width/2+3)*30+30-1, yOff+Height*30-10, xOff+(Width-1)*30-10, yOff+Height*30-10, {255,255,255});
	DrawLine(xOff-1, yOff+30-1, xOff-1, yOff+(Height-1)*30-10, {255,255,255});
	DrawLine(xOff+Width*30-10, yOff+30-1, xOff+Width*30-10, yOff+(Height-1)*30-10, {255,255,255});
	
	DrawLine(xOff-1, yOff+30-1, xOff+30-1, yOff+30-1, {255,255,255});
	DrawLine(xOff+30-1, yOff-1, xOff+30-1, yOff+30-1, {255,255,255});
	DrawLine(xOff+(Width-1)*30-10, yOff+30-1, xOff+Width*30-10-1, yOff+30-1, {255,255,255});
	DrawLine(xOff+(Width-1)*30-10, yOff-1, xOff+(Width-1)*30-10, yOff+30-1, {255,255,255});
	DrawLine(xOff-1, yOff+(Height-1)*30-10, xOff+30-1, yOff+(Height-1)*30-10, {255,255,255});
	DrawLine(xOff+30-1, yOff+(Height-1)*30-10, xOff+30-1, yOff+Height*30-10, {255,255,255});
	DrawLine(xOff+(Width-1)*30-10, yOff+(Height-1)*30-10, xOff+Width*30-10-1, yOff+(Height-1)*30-10, {255,255,255});
	DrawLine(xOff+(Width-1)*30-10, yOff+(Height-1)*30-10, xOff+(Width-1)*30-10, yOff+Height*30-10, {255,255,255});
	
	DrawLine(xOff+(Width/2-3)*30-10, yOff+(Height-1)*30-10, xOff+(Width/2-3)*30-10, yOff+Height*30-10, {255,255,255});
	DrawLine(xOff+(Width/2+4)*30-1, yOff+(Height-1)*30-10, xOff+(Width/2+4)*30-1, yOff+Height*30-10, {255,255,255});
	DrawLine(xOff+(Width/2-3)*30-10, yOff+(Height-1)*30-10, xOff+(Width/2-2)*30-10, yOff+(Height-1)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2+3)*30-1, yOff+(Height-1)*30-10, xOff+(Width/2+4)*30-1, yOff+(Height-1)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2-2)*30-10, yOff+(Height-3)*30-10, xOff+(Width/2-2)*30-10, yOff+(Height-1)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2+3)*30-1, yOff+(Height-3)*30-10, xOff+(Width/2+3)*30-1, yOff+(Height-1)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2-2)*30-10, yOff+(Height-3)*30-10, xOff+(Width/2-1)*30-10, yOff+(Height-3)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2+2)*30-1, yOff+(Height-3)*30-10, xOff+(Width/2+3)*30-1, yOff+(Height-3)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2-1)*30-10, yOff+(Height-4)*30-10, xOff+(Width/2-1)*30-10, yOff+(Height-3)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2+2)*30-1, yOff+(Height-4)*30-10, xOff+(Width/2+2)*30-1, yOff+(Height-3)*30-10, {255,255,255});
	DrawLine(xOff+(Width/2-1)*30-10, yOff+(Height-4)*30-10, xOff+(Width/2+2)*30-1, yOff+(Height-4)*30-10, {255,255,255});
	
	for (int y = 0; y < Height; y++)
	{
		for (int x = 0; x < Width; x++)
		{
			if (!(x==0 && y==0) && !(x==Width-1 && y==0) && !(x==0 && y==Height-1) && !(x==Width-1 && y==Height-1) && !(x>Width/2-4 && x<Width/2+4 && y==Height-1) && !(x>Width/2-3 && x<Width/2+3 && (y==Height-2 || y==Height-3)) && !(x>Width/2-2 && x<Width/2+2 && y==Height-4))
			{
				DrawRectangle(x*30+xOff, y*30+yOff, 20, 20, Lights[y][x]);
			}
		}
	}
	//OutlineRectangle(xOff-2, yOff-2, Width*30-10+2+2, Height*30-10+2+2, {255,255,255});
}
#endif

