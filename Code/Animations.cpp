
#include "ShadesController.h"

#define _ 0
#define $ 1


u8 Frame[ShadesController::Height][ShadesController::Width] = 
{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,_,$,$,$,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
	{$,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$} };

u8 IdleFrame[ShadesController::Height][ShadesController::Width] = 
{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,1,1,_,_,_},
	{_,_,1,_,_,_,_,1,_,_,_,_,_,_,_,_,_,1,_,_,_,_,1,_,_},
	{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
	{_,_,_,_,_,1,1,_,_,_,_,$,$,$,_,_,_,_,1,1,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
	{$,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$} };

u8 BlinkFrame[ShadesController::Height][ShadesController::Width] = 
{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,_,_},
	{_,_,_,_,_,_,_,_,_,_,_,$,$,$,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$}	};
	
u8 HappyFrames[][ShadesController::Height][ShadesController::Width] = 
{
	{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,$,$,$,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
		{$,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$}	},
	
	{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,$,$,$,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
		{$,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$}	},
};

u8 FunnyFrames[][ShadesController::Height][ShadesController::Width] = 
{	
	{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,$,$,$,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,$,$,$,$,$,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
		{$,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$}	},
		
	{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,1,_,_,_,_,_,_,_,1,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,1,_,_,_,$,$,$,_,_,_,1,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,$,$,$,$,$,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
		{$,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$}	},
};


u8 DeadFrame[ShadesController::Height][ShadesController::Width] = 
{	{$,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,$},
	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
	{_,_,_,_,1,_,_,_,1,_,_,_,_,_,_,_,1,_,_,_,1,_,_,_,_},
	{_,_,_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_,_,_},
	{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
	{_,_,_,_,_,1,_,1,_,_,_,$,$,$,_,_,_,1,_,1,_,_,_,_,_},
	{_,_,_,_,1,_,_,_,1,_,$,$,$,$,$,_,1,_,_,_,1,_,_,_,_},
	{_,_,_,_,_,_,_,_,_,_,$,$,$,$,$,_,_,_,_,_,_,_,_,_,_},
	{$,_,_,_,_,_,_,_,_,$,$,$,$,$,$,$,_,_,_,_,_,_,_,_,$} };

u8 Frames[][ShadesController::Height][ShadesController::Width] = 
{
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,1,1,1,1,1,1,_,_},
		{_,_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,1,_,1,_,1,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,_,1,_,1,_,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,1,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,1,_,_,_},
		{_,_,_,_,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,1,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_} },
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_,_},
		{_,_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
		
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,1,1,1,_,_,_,_,1,1,_,_,_,1,1,_,_,_,1,1,1,_,_,_},
		{_,_,1,_,_,1,_,_,1,_,_,1,_,1,_,_,1,_,_,1,_,_,1,_,_},
		{_,_,1,1,1,_,_,_,1,_,_,1,_,1,_,_,1,_,_,1,1,1,_,_,_},
		{_,_,1,_,_,1,_,_,_,1,1,_,_,_,1,1,_,_,_,1,_,_,_,_,_},
		{_,_,1,1,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
	
	{	{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,_},
		{_,_,_,1,_,1,_,_,_,_,_,_,_,_,_,_,_,_,_,1,_,1,_,_,_},
		{_,_,1,_,_,_,1,_,_,_,_,_,_,_,_,_,_,_,1,_,_,_,1,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_},
		{_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_}	},
};

#undef _
#undef $

void ShadesController::AnimateIdle(i64 now)
{
	static int blink = -1;
	if (blink<0) { blink = rand()%5000+2000; }
	CopyFrame(IdleFrame);
	
	if (now-AnimStartTime >= blink)
	{
		blink = -1;
		NextState = AnimState::Blink;
	}
}
void ShadesController::AnimateBlink(i64 now)
{
	CopyFrame(BlinkFrame);
	
	if (now-AnimStartTime >= 100)
	{
		NextState = LastState;
	}
}
void ShadesController::AnimateHappy(i64 now)
{
	CopyFrame(HappyFrames[((now-AnimStartTime)%300<300/2)?0:1]);
	
	if (now-AnimStartTime >= 1000)
	{
		NextState = AnimState::Idle;
	}
}
void ShadesController::AnimateFunny(i64 now)
{
	static int blink = -1;
	if (blink<0) { blink = rand()%5000+2000; }
	CopyFrame(FunnyFrames[0]);
	
	
	if (now-AnimStartTime >= blink)
	{
		blink = -1;
		NextState = AnimState::Blink;
	}
}
void ShadesController::AnimateEyeRoll(i64 now)
{
	
}
void ShadesController::AnimateEyebrow(i64 now)
{
	
}
void ShadesController::AnimateBoop(i64 now)
{
	
}
void ShadesController::AnimateOwO(i64 now)
{
	
}
void ShadesController::AnimateTest(i64 now)
{
	/*for (int y = 0; y < Height; y++)
	{
		for (int x = 0; x < Width; x++)
		{
			if (((now-AnimStartTime)%10000) < 5000)
			{
				Lights[y][x] = HSL(mmod(((now-AnimStartTime)%2000)/2000.0 + (-y-x)/50.0,1.0),1.0,0.3)();
			}
			else 
			{
				Lights[y][x] = HSL(MAGENTA+y/60.0-0.11+sin(((now-AnimStartTime)%5000)/5000.0*Width-x/2.0)/70.0+cos(((now-AnimStartTime)%9000)/9000.0*Width-x/5.0)/70.0,1.0,0.3)();
			}
		}
	}
	
	CopyFrame(Frames[0+1*(now-AnimStartTime)/200 % 11]);*/
	
	
	static bool latch = false;
	if ((now-AnimStartTime)%150 < 150/2)
	{
		if (!latch)
		{
			int l = 4;
			for (int x = 0; x < Width; x++)
			{
				int h = (rand() % (Height-5)+l);
				l=h-l;
				for (int y = 0; y < Height; y++)
				{
					RGB colour = HSL(MAGENTA+y/60.0-0.1)();
					Lights[y][x] = (Height-y-1<=h ? colour : RGB{0,0,0});
				}
			}
			latch = true;
		}
	}
	else
	{
		latch = false;
	}
	
}


